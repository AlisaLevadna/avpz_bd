--
-- PostgreSQL database dump
--

-- Dumped from database version 13.0
-- Dumped by pg_dump version 13.0

-- Started on 2020-10-17 23:07:46

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 9 (class 2615 OID 16396)
-- Name: avpz; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA avpz;


ALTER SCHEMA avpz OWNER TO postgres;

--
-- TOC entry 8 (class 2615 OID 16395)
-- Name: test; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA test;


ALTER SCHEMA test OWNER TO postgres;

--
-- TOC entry 2 (class 3079 OID 16384)
-- Name: adminpack; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS adminpack WITH SCHEMA pg_catalog;


--
-- TOC entry 3027 (class 0 OID 0)
-- Dependencies: 2
-- Name: EXTENSION adminpack; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION adminpack IS 'administrative functions for PostgreSQL';


--
-- TOC entry 3 (class 3079 OID 16464)
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- TOC entry 3028 (class 0 OID 0)
-- Dependencies: 3
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


--
-- TOC entry 643 (class 1247 OID 16404)
-- Name: email; Type: DOMAIN; Schema: avpz; Owner: postgres
--

CREATE DOMAIN avpz.email AS text
	CONSTRAINT value_check CHECK ((VALUE ~ '^[a-zA-Z0-9.!#$%&''*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$'::text));


ALTER DOMAIN avpz.email OWNER TO postgres;

--
-- TOC entry 231 (class 1255 OID 16463)
-- Name: add_found_bird(double precision, double precision, timestamp with time zone, avpz.email, bytea, bytea, text); Type: PROCEDURE; Schema: avpz; Owner: postgres
--

CREATE PROCEDURE avpz.add_found_bird(longitude double precision, latitude double precision, time_ timestamp with time zone, email_ avpz.email, photo_ bytea, sound_ bytea, name_ text)
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO avpz.foundbirds 
	(found_bird_id, found_point, found_time, finder_email, photo, sound, bird_name)
	VALUES 
	(uuid_generate_v4(), point(longitude, latitude), time_, email_, photo_, sound_, name_);
END
$$;


ALTER PROCEDURE avpz.add_found_bird(longitude double precision, latitude double precision, time_ timestamp with time zone, email_ avpz.email, photo_ bytea, sound_ bytea, name_ text) OWNER TO postgres;

--
-- TOC entry 207 (class 1255 OID 16458)
-- Name: find_bird_by_name(text); Type: FUNCTION; Schema: avpz; Owner: postgres
--

CREATE FUNCTION avpz.find_bird_by_name(bird text) RETURNS SETOF record
    LANGUAGE plpgsql
    AS $$
BEGIN
RETURN QUERY
SELECT * FROM avpz.birds
WHERE bird_name ILIKE concat('%', bird, '%');
END
$$;


ALTER FUNCTION avpz.find_bird_by_name(bird text) OWNER TO postgres;

--
-- TOC entry 219 (class 1255 OID 16437)
-- Name: login_user(text, bytea); Type: FUNCTION; Schema: avpz; Owner: postgres
--

CREATE FUNCTION avpz.login_user(email text, user_password_ bytea) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
	counter integer;
BEGIN
	SELECT count(*)
	INTO counter
	FROM Users
	WHERE user_email = email;
	
	IF counter = 0 THEN
		RETURN 2;
	ELSE
		SELECT count(*)
		INTO counter
		FROM Users
		WHERE user_email = email AND user_password = password;
		IF counter = 1 THEN
			RETURN 0;
		ELSE
			RETURN 1;
		END IF;
	END IF;
END;
$$;


ALTER FUNCTION avpz.login_user(email text, user_password_ bytea) OWNER TO postgres;

--
-- TOC entry 220 (class 1255 OID 16436)
-- Name: registrer_user(avpz.email, bytea, text, text, text, date, text); Type: FUNCTION; Schema: avpz; Owner: postgres
--

CREATE FUNCTION avpz.registrer_user(email avpz.email, user_password bytea, first_name text, middle_name text, last_name text, birth_date date, city text) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
	user_count NUMERIC(4);
BEGIN
	SELECT count(*) 
	INTO user_count
	FROM avpz.Users
	WHERE user_email = email;

	IF user_count = 0 THEN
		INSERT INTO avpz.Users 
		VALUES (email, user_password, first_name, middle_name,
				last_name, birth_date, city);
		RETURN TRUE;
	ELSE
		RETURN FALSE;
	END IF;
END;
$$;


ALTER FUNCTION avpz.registrer_user(email avpz.email, user_password bytea, first_name text, middle_name text, last_name text, birth_date date, city text) OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- TOC entry 206 (class 1259 OID 16438)
-- Name: birds; Type: TABLE; Schema: avpz; Owner: postgres
--

CREATE TABLE avpz.birds (
    bird_name text NOT NULL,
    photo bytea,
    description text
);


ALTER TABLE avpz.birds OWNER TO postgres;

--
-- TOC entry 205 (class 1259 OID 16414)
-- Name: foundbirds; Type: TABLE; Schema: avpz; Owner: postgres
--

CREATE TABLE avpz.foundbirds (
    found_bird_id uuid NOT NULL,
    found_point point NOT NULL,
    found_time timestamp with time zone NOT NULL,
    finder_email avpz.email NOT NULL,
    photo bytea,
    sound bytea,
    bird_name text NOT NULL
);


ALTER TABLE avpz.foundbirds OWNER TO postgres;

--
-- TOC entry 204 (class 1259 OID 16406)
-- Name: users; Type: TABLE; Schema: avpz; Owner: postgres
--

CREATE TABLE avpz.users (
    user_email avpz.email NOT NULL,
    user_password bytea NOT NULL,
    first_name text NOT NULL,
    middle_name text,
    last_name text NOT NULL,
    birth_date date,
    city text
);


ALTER TABLE avpz.users OWNER TO postgres;

--
-- TOC entry 2884 (class 2606 OID 16421)
-- Name: foundbirds FounBirds_pkey; Type: CONSTRAINT; Schema: avpz; Owner: postgres
--

ALTER TABLE ONLY avpz.foundbirds
    ADD CONSTRAINT "FounBirds_pkey" PRIMARY KEY (found_bird_id);


--
-- TOC entry 2882 (class 2606 OID 16413)
-- Name: users Users_pkey; Type: CONSTRAINT; Schema: avpz; Owner: postgres
--

ALTER TABLE ONLY avpz.users
    ADD CONSTRAINT "Users_pkey" PRIMARY KEY (user_email);


--
-- TOC entry 2886 (class 2606 OID 16445)
-- Name: birds birds_pkey; Type: CONSTRAINT; Schema: avpz; Owner: postgres
--

ALTER TABLE ONLY avpz.birds
    ADD CONSTRAINT birds_pkey PRIMARY KEY (bird_name);


--
-- TOC entry 2888 (class 2606 OID 16451)
-- Name: foundbirds bird; Type: FK CONSTRAINT; Schema: avpz; Owner: postgres
--

ALTER TABLE ONLY avpz.foundbirds
    ADD CONSTRAINT bird FOREIGN KEY (bird_name) REFERENCES avpz.birds(bird_name) ON UPDATE CASCADE ON DELETE CASCADE NOT VALID;


--
-- TOC entry 2887 (class 2606 OID 16446)
-- Name: foundbirds user; Type: FK CONSTRAINT; Schema: avpz; Owner: postgres
--

ALTER TABLE ONLY avpz.foundbirds
    ADD CONSTRAINT "user" FOREIGN KEY (finder_email) REFERENCES avpz.users(user_email) ON UPDATE CASCADE ON DELETE CASCADE NOT VALID;


-- Completed on 2020-10-17 23:07:47

--
-- PostgreSQL database dump complete
--

